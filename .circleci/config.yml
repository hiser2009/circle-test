version: 2.1
jobs:
  build:
    working_directory: /app
    docker:
      - image: amazon/aws-cli:latest
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            yum search tar
            yum install tar -y
            yum update tar
            yum search gzip
            yum install gzip -y
            yum update gzip
            yum install git
            yum search docker
            yum install docker
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/app.tar
      # - run:
      #     name: Make Dummy Docker Compse File
      #     command: |
      #       touch ././docker-compose.yml
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=app -t app .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/app.tar app
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/app.tar
      # - run:
      #     name: Run tests
      #     command: |
      #       echo docker-compose -f ./docker-compose.test.yml >> ./docker-compose.test.yml
      #       docker-compose -f ./docker-compose.test.yml up
      - deploy:
          name: Push application Docker image
          command: |
            if [ "${CIRCLE_BRANCH}" == "build_docker_feat" ]; then
              login="$(aws ecr get-login)"
              ${login}
              docker tag app "${AWS_ECR_ACCOUNT_URL}/app:${CIRCLE_SHA1}" 
              docker push "${AWS_ECR_ACCOUNT_URL}/app:${CIRCLE_SHA1}"
            fi

# workflows:
#   version: 2
#   build_and_test:
#     jobs:
#       - build
#       #- test